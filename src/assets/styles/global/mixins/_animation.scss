@use '../settings/easing' as e;

@mixin before-scale-change() {
    transition: transform 0.6s e.ease(OutSine);
}
@mixin after-scale-change($x: 0.95, $delay: 0s) {
    transform: scale($x);
    transition-delay: $delay;
}

@mixin before-brightness-down() {
    transition: filter 0.6s e.ease(OutSine);
}
@mixin after-brightness-down($x: 0.8, $delay: 0s) {
    filter: brightness($x);
    transition-delay: $delay;
}

@mixin before-fade-in($duration: 0.6s) {
    opacity: 0;
    transition: opacity $duration e.ease(OutSine);
}
@mixin after-fade-in($delay: 0.3s) {
    opacity: 1;
    transition-delay: $delay;
}

@mixin before-fadeout() {
    transition: opacity 0.3s e.ease(OutSine);
}
@mixin after-fadeout($delay: 0s) {
    opacity: 0;
    transition-delay: $delay;
}

@mixin before-line-center($color, $bottom: -0.5rem) {
    &::after {
        content: '';
        position: absolute;
        left: 0;
        bottom: $bottom;
        width: 100%;
        height: 0.1rem;
        background-color: $color;
        transform: scaleX(0);
        transition: transform 0.4s e.ease(OutSine);
        will-change: transform;
    }
}
@mixin after-line-center($color, $delay: 0s) {
    &::after {
        background-color: $color;
        transform: scaleX(1);
        transition-delay: $delay;
    }
}

@mixin custom-arrow-to-upper-right($x, $y, $time: 0.6s, $delay: 0s) {
    animation: arrow-to-upper-right $time e.ease(OutSine) $delay forwards;
    @keyframes arrow-to-upper-right {
        0% {
            transform: translate3d(0, 0, 0);
        }
        50% {
            transform: translate3d($x, -$y, 0);
        }
        51% {
            transform: translate3d(-$x, $y, 0);
        }
        100% {
            transform: translate3d(0, 0, 0);
        }
    }
}

@mixin custom-arrow-to-right($x, $time: 0.6s, $delay: 0s) {
    animation: arrow-to-right $time e.ease(OutSine) $delay forwards;
    @keyframes arrow-to-right {
        0% {
            transform: translate3d(0, 0, 0);
        }
        50% {
            transform: translate3d($x, 0, 0);
        }
        51% {
            transform: translate3d(-$x, 0, 0);
        }
        100% {
            transform: translate3d(0, 0, 0);
        }
    }
}

@mixin custom-arrow-to-upper($y, $time: 0.6s, $delay: 0s) {
    animation: arrow-to-upper $time e.ease(OutSine) $delay forwards;
    @keyframes arrow-to-upper {
        0% {
            transform: translate3d(0, 0, 0);
        }
        50% {
            transform: translate3d(0, -$y, 0);
        }
        51% {
            transform: translate3d(0, $y, 0);
        }
        100% {
            transform: translate3d(0, 0, 0);
        }
    }
}

@mixin custom-arrow-to-bottom($y, $time: 0.6s, $delay: 0s) {
    animation: arrow-to-bottom $time e.ease(OutSine) $delay forwards;
    @keyframes arrow-to-bottom {
        0% {
            transform: translate3d(0, 0, 0);
        }
        50% {
            transform: translate3d(0, $y, 0);
        }
        51% {
            transform: translate3d(0, -$y, 0);
        }
        100% {
            transform: translate3d(0, 0, 0);
        }
    }
}

@mixin illust-paint-to-left {
    clip-path: polygon(100% 0, 100% 0.5%, 100% 100%, 100% 100%);
    opacity: 0;
    transition: opacity 0.8s e.ease(OutSine) 0.3s;
    &.is-active {
        animation: paint-to-left 0.9s e.ease(OutQuad) 0.3s forwards;
        opacity: 1;
    }
}

@mixin illust-paint-to-right {
    clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
    opacity: 0;
    transition: opacity 0.8s e.ease(OutSine) 0.3s;
    &.is-active {
        animation: paint-to-right 0.9s e.ease(OutQuad) 0.3s forwards;
        opacity: 1;
    }
}
